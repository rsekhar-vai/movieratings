[project]
name = "backend"
version = "0.1"
description = ""
authors = [
    {name = "rsekharvai", email = "rsekhar.vai@gmail.com"},
]
dependencies = [
    "django>=4.1.3",
    "djangorestframework>=3.14.0",
    "psycopg2>=2.9.5",
    "drf-spectacular>=0.24.2",
]
requires-python = ">=3.11"
license = {text = "MIT"}
[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black>=22.10.0",
    "isort>=5.10.1",
    "mypy>=0.991",
    "flake8>=6.0.0",
    "bandit>=1.7.4",
    "vulture>=2.6",
    "pytest>=7.2.0",
    "pytest-django>=4.5.2",
]

[tool.black]
target-version = ["py311"]

[tool.isort]
profile = "black"

[tool.vulture]
min_confidence = 100

[tool.pytest.ini_options]
addopts = "--showlocals"
pythonpath = ["src"]
filterwarnings = ["ignore::pytest.PytestCacheWarning"]

[[tool.mypy.overrides]]
module =["h11"]
ignore_missing_imports = true

[tool.pdm.scripts]
# audit = "pip-audit"
# format-black = "black src/ tests/"
# format-djhtml = "djhtml src/backend/templates -t 2 --in-place"
# format-isort = "isort src tests"
# format = {composite = ["format-black", "format-djhtml", "format-isort"]}
# lint-bandit = "bandit -r src/"
# lint-black = "black --check --diff src/ tests/"
# lint-djhtml = "djhtml src/backend/templates -t 2 --check"
# lint-flake8 = "flake8 src/ tests/"
# lint-isort = "isort --check --diff src tests"
# lint-mypy = "mypy src/backend tests"
# lint-vulture = "vulture src"
# lint = {composite = ["lint-bandit", "lint-black", "lint-djhtml", "lint-flake8", "lint-isort", "lint-mypy", "lint-vulture"]}
#start = {cmd = "quart --app src/backend/run.py run --port 5050", env_file = "development.env"}
#recreate-db-base = "quart --app src/backend/run.py recreate_db"
#recreate-db = {composite = ["recreate-db-base"], env_file = "development.env"}
#test = {composite = ["recreate-db-base", "pytest tests/"], env_file = "testing.env"}
freeze = {cmd = "pdm export -f requirements --prod --without-hashes -o requirements.txt"}
freeze-dev = {cmd = "pdm export -f requirements --dev --without-hashes -o requirements.dev.txt"}
